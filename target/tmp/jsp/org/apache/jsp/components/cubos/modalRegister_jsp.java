/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.7.v20170914
 * Generated at: 2022-05-19 20:24:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.components.cubos;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class modalRegister_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<div class=\"modal fade\" id=\"modalRegister\" tabindex=\"-1\">\r\n");
      out.write("    <div class=\"modal-dialog\">\r\n");
      out.write("        <div class=\"modal-content\">\r\n");
      out.write("            <div class=\"modal-header\">\r\n");
      out.write("                <h5 class=\"modal-title\">Nuevo cubo</h5>\r\n");
      out.write("                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-body\">\r\n");
      out.write("                <form name=\"formCubeRegister\" id=\"formCubeRegister\" novalidate ng-submit=\"registerCube()\">\r\n");
      out.write("                    <div class=\"row gy-3\">\r\n");
      out.write("                        <div class=\"col-12 col-md-6\">\r\n");
      out.write("                            <label class=\"form-label\">SKU: <b>*</b></label>\r\n");
      out.write("                            <input required name=\"sku\" type=\"text\" class=\"form-control\" ng-model=\"infoModal.sku\">\r\n");
      out.write("                            <span class=\"invalid-feedback\">{{validate('formCubeRegister', 'sku')}}</span>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"col-12 col-md-6\">\r\n");
      out.write("                            <label class=\"form-label\">Nombre: <b>*</b></label>\r\n");
      out.write("                            <input required name=\"name\" type=\"text\" class=\"form-control\" ng-model=\"infoModal.name\">\r\n");
      out.write("                            <span class=\"invalid-feedback\">{{validate('formCubeRegister', 'name')}}</span>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"col-12\">\r\n");
      out.write("                            <label class=\"form-label\">Descripci√≥n: <b>*</b></label>\r\n");
      out.write("                            <input required name=\"description\" type=\"text\" class=\"form-control\" ng-model=\"infoModal.description\">\r\n");
      out.write("                            <span class=\"invalid-feedback\">{{validate('formCubeRegister', 'description')}}</span>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"col-12 col-md-6\">\r\n");
      out.write("                            <label class=\"form-label\">Imagen: <b>*</b></label>\r\n");
      out.write("                            <input required name=\"image\" type=\"url\" class=\"form-control\" ng-model=\"infoModal.image\">\r\n");
      out.write("                            <span class=\"invalid-feedback\">{{validate('formCubeRegister', 'image')}}</span>\r\n");
      out.write("                            <img ng-src=\"{{infoModal.image}}\" class=\"img-thumbnail w-100 mt-3\" ng-class=\"{'d-none': !infoModal.image || formCubeRegister.image.$error.url}\" style=\"height: 150px; object-fit: cover\">\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"col-12 col-md-6\">\r\n");
      out.write("                            <label class=\"form-label\">Segunda imagen: <b>*</b></label>\r\n");
      out.write("                            <input required name=\"image2\" type=\"url\" class=\"form-control\" ng-model=\"infoModal.image2\">\r\n");
      out.write("                            <span class=\"invalid-feedback\">{{validate('formCubeRegister', 'image2')}}</span>\r\n");
      out.write("                            <img ng-src=\"{{infoModal.image2}}\" class=\"img-thumbnail w-100 mt-3\" ng-class=\"{'d-none': !infoModal.image2 || formCubeRegister.image2.$error.url}\" style=\"height: 150px; object-fit: cover\">\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </form>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-footer\">\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\"><i data-feather=\"x\"></i>&nbsp;<span class=\"align-middle\">Cerrar</span></button>\r\n");
      out.write("                <button type=\"submit\" form=\"formCubeRegister\" class=\"btn btn-primary\"><i data-feather=\"check\"></i>&nbsp;<span class=\"align-middle\">Registrar</span></button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
